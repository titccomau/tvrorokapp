name: üì¶ EAS Local APK Build

on:
  workflow_dispatch:

jobs:
  build-local-apk:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Java 11
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: '11'

      - name: Install Android SDK cmdline-tools (with debug & correct path)
        run: |
          echo "üìÅ Setting ANDROID_SDK_ROOT..."
          export ANDROID_SDK_ROOT=$HOME/android-sdk
          mkdir -p "$ANDROID_SDK_ROOT/cmdline-tools"

          echo "üì• Downloading Android cmdline-tools..."
          wget -q https://dl.google.com/android/repository/commandlinetools-linux-9477386_latest.zip -O tools.zip

          echo "üì¶ Unzipping SDK tools..."
          unzip -q tools.zip -d "$ANDROID_SDK_ROOT/cmdline-tools"
          mv "$ANDROID_SDK_ROOT/cmdline-tools/cmdline-tools" "$ANDROID_SDK_ROOT/cmdline-tools/latest"
          rm tools.zip

          echo "‚úÖ Final structure:"
          ls -R "$ANDROID_SDK_ROOT/cmdline-tools"

      - name: Accept Android licenses + install packages
        run: |
          export ANDROID_SDK_ROOT=$HOME/android-sdk
          yes | $ANDROID_SDK_ROOT/cmdline-tools/latest/bin/sdkmanager --sdk_root=$ANDROID_SDK_ROOT --licenses

          $ANDROID_SDK_ROOT/cmdline-tools/latest/bin/sdkmanager --sdk_root=$ANDROID_SDK_ROOT \
            "platform-tools" "platforms;android-34" "build-tools;34.0.0"

      - name: Set environment paths
        run: |
          echo "$HOME/android-sdk/platform-tools" >> $GITHUB_PATH
          echo "$HOME/android-sdk/emulator" >> $GITHUB_PATH

      - name: Install EAS CLI
        run: npm install -g eas-cli expo-cli

      - name: Install project dependencies
        run: |
          echo "üì¶ Checking for package-lock.json"
          if [ -f package-lock.json ]; then
            echo "üîß Installing dependencies using npm ci..."
            npm ci
          else
            echo "üì¶ package-lock.json not found, using npm install..."
            npm install
          fi

      - name: Generate eas.json (if not present)
        run: |
          if [ ! -f eas.json ]; then
            echo "{\"cli\":{\"version\":\">= 3.0.0\",\"requireAuthentication\":false},\"build\":{\"local-apk\":{\"android\":{\"buildType\":\"apk\"},\"developmentClient\":false,\"distribution\":\"internal\"}},\"owner\":\"jehadurre\"}" > eas.json
          else
            echo "‚úÖ eas.json already exists."
          fi

      - name: Debug EAS token presence
        run: |
          if [ -z "$EAS_ACCESS_TOKEN" ]; then
            echo "‚ùå EAS_ACCESS_TOKEN is not available."
            exit 1
          else
            echo "‚úÖ EAS_ACCESS_TOKEN is set."
          fi
        env:
          EAS_ACCESS_TOKEN: ${{ secrets.EAS_ACCESS_TOKEN }}

      - name: Prebuild Android project
        run: npx expo prebuild --platform android

      - name: Run local EAS build (APK)
        run: eas build --platform android --profile local-apk --local
        env:
          EAS_ACCESS_TOKEN: ${{ secrets.EAS_ACCESS_TOKEN }}

      - name: Upload APK artifact
        uses: actions/upload-artifact@v4
        with:
          name: local-app-release-apk
          path: android/app/build/outputs/apk/release/*.apk
